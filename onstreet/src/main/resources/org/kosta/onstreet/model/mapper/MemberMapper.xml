<?xml version="1.0" encoding="UTF-8"?>
<!-- Sql Mapper -->
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosta.onstreet.model.mapper.MemberMapper">
 	
 	<!-- artist has-a  -->
 	<resultMap type="artistVO" id="memberList">
 		<result column="id" property="memberVO.id"/>
 		<result column="password" property="memberVO.password"/>
 		<result column="nickname" property="memberVO.nickName"/>
 		<result column="address" property="memberVO.address"/>
 		<result column="phone" property="memberVO.phone"/>
 		<result column="email" property="memberVO.email"/>
 		<result column="name" property="memberVO.name"/>
 		<result column="age" property="memberVO.age"/>
 		<result column="remove_user_date" property="memberVO.removeUserDate"/>
 		<result column="profile" property="memberVO.profile"/>
 	</resultMap>
 	
 	<!-- follow has a -->
 	<resultMap type="followVO" id="followlist">
 		<result column="id" property="memberVO.id"/>
 		<result column="nickname" property="memberVO.nickName"/>
 		<result column="profile" property="memberVO.profile"/>
 	</resultMap>
 	
 	<resultMap type="followVO" id="follow">
 		<result column="id" property="memberVO.id"/>
 	</resultMap>
 	
 	<!-- 권한 has-a -->
 	<resultMap type="authVO" id="memberAuth">
 		<result column="id" property="memberVO.id"/>
 	</resultMap>
 	
 	<!-- 로그인-진용현  -->
 	<select id ="login" resultMap="memberList">
 		SELECT m.id,m.password,m.nickname,m.address,m.phone,m.email,m.name,m.age,m.remove_user_date,m.profile,
		a.sns,a.account,a.artist_info,a.check_date
		FROM os_member m, os_artist a
		WHERE m.id = a.id(+) AND m.id=#{value}
 	</select>
 	
 	<!-- 권한조회-진용현  -->
 	<select id="selectAuthorityByUsername" resultMap="memberAuth">
 		SELECT auth_name,id FROM os_auth WHERE id=#{value}
 	</select>
 	
 	<!-- 아티스트 승인조회-진용현 -->
 	<select id="artistCheckDate" resultType="string">
 		SELECT check_date FROM os_artist WHERE id=#{value}
 	</select>
 	
 	<!-- 닉네임 중복검사 - 진용현 -->
 	<select id="nickNameCheck" resultType="int">
 		SELECT COUNT(*) FROM os_member WHERE nickname=#{value}
 	</select>
 	
 	<!-- 회원탈퇴 세희 -->
 	<update id="removeMember" parameterType="artistVO">
	update os_member 
	set remove_user_date=sysdate
	where id=#{memberVO.id} 
 	</update>
 	
	
	<!-- 회원가입 - 진용현 -->
	<insert id="registerMember" parameterType="memberVO">
		INSERT INTO os_member(id,password,nickname,address,phone,email,name,age,profile) 
		VALUES(#{id},#{password},#{nickName},#{address},#{phone},#{email},#{name},#{age},#{profile})
	</insert>
	
	<!-- 회원가입 권한추가 - 진용현 -->
	<insert id="registerAuth" parameterType="authVO">
	INSERT INTO os_auth(auth_name,id) VALUES(#{authName},#{memberVO.id})
	</insert>
	
	<!-- 회원가입[아티스트] - 진용현 -->
	<insert id="registerArtist" parameterType="artistVO">
		INSERT INTO os_artist(id,sns,account,artist_info) VALUES(#{memberVO.id},#{sns},#{account},#{artistInfo})
	</insert>
	
	<!-- 회원수정 - 진용현 -->
	<update id="updateMember" parameterType="memberVO">
		UPDATE os_member
		<set>
			<if test="nickName != null">nickname=#{nickName},</if>
			<if test="address != null">address=#{address},</if>
			<if test="phone != null">phone=#{phone},</if>
			<if test="email != null">email=#{email},</if>
			<if test="name != null">name=#{name},</if>
			<if test="profile != null">profile=#{profile}</if>
		</set>
		 WHERE id=#{id}
	</update>
	
	<!-- 회원수정[아티스트] - 진용현 -->
	<update id="updateArtist" parameterType="artistVO">
		UPDATE os_artist 
		<set>
			<if test="sns != null">sns=#{sns},</if>
			<if test="account != null">account=#{account},</if>
			<if test="artistInfo != null">artist_info=#{artistInfo}</if>
		</set>
		WHERE id=#{memberVO.id}
	</update>
	
	<!-- 팔로우리스트가져오기 정세희 -->
	<select id="getfollowingList" resultMap="followlist">
		select m.nickname,m.profile,f.following_id
		from os_follow f,os_member m
		where m.id=f.id and f.id=#{value}
	</select>
	
	<!-- 정지윤 -->
	<!-- 팔로잉 등록 -->
	<insert id="registerFollowing" parameterType="followVO">
		INSERT INTO os_follow (following_id,id)
		VALUES (#{followingId},#{memberVO.id})
	</insert>
	
	<!-- 팔로잉 조회 -->
	<select id="followingCheckList" resultType="int">
		SELECT COUNT(*) FROM os_follow 
		WHERE following_id=#{followingId} 
		AND id=#{memberVO.id}
	</select>
	
	<!-- 팔로우리스트 삭제하기 정세희 -->
	<delete id="removeFollowing" parameterType="followVO">
		delete 
		from os_follow
		where id=#{memberVO.id} and following_id=#{followingId}
	</delete>
	
	<!-- 이벤트승인현황 정세희 -->
 	<select id="artistCheckEventList" resultMap="eventList" parameterType="pagingBean">
 		SELECT event_no, event_title, event_image, event_date
		FROM (SELECT row_number() over(order by event_check_date desc) as rnum, event_check_date, event_no,
		event_title, event_image, to_char(event_date,'yyyy"년" mm"월" dd"일"') as event_date FROM os_event)
		WHERE event_check_date IS NOT NULL
		AND rnum between #{startRowNumber} and #{endRowNumber} 
 	</select>
 	
</mapper>